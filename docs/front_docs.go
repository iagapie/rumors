// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplatefront = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/articles": {
            "get": {
                "description": "get articles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "List articles",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Page Index",
                        "name": "index",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Page Size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Article"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wool.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wool.Error"
                        }
                    }
                }
            }
        },
        "/feeds": {
            "get": {
                "description": "get feeds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feeds"
                ],
                "summary": "List feeds",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Page Index",
                        "name": "index",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Page Size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Feed"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wool.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wool.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Article": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "long_desc": {
                    "type": "string"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Media"
                    }
                },
                "pub_date": {
                    "type": "string"
                },
                "short_desc": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/entity.Source"
                },
                "source_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Feed": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Media": {
            "type": "object",
            "properties": {
                "meta": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "type": {
                    "$ref": "#/definitions/entity.MediaType"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "entity.MediaType": {
            "type": "string",
            "enum": [
                "image",
                "video",
                "audio"
            ],
            "x-enum-varnames": [
                "ImageType",
                "VideoType",
                "AudioType"
            ]
        },
        "entity.Source": {
            "type": "string",
            "enum": [
                "feed"
            ],
            "x-enum-varnames": [
                "FeedSource"
            ]
        },
        "wool.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "developer_message": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfofront holds exported Swagger Info so clients can modify it
var SwaggerInfofront = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Rumors Frontend API",
	Description:      "",
	InfoInstanceName: "front",
	SwaggerTemplate:  docTemplatefront,
}

func init() {
	swag.Register(SwaggerInfofront.InstanceName(), SwaggerInfofront)
}
